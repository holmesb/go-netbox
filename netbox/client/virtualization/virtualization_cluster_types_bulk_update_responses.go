// Code generated by go-swagger; DO NOT EDIT.

package virtualization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fbreckle/go-netbox/netbox/models"
)

// VirtualizationClusterTypesBulkUpdateReader is a Reader for the VirtualizationClusterTypesBulkUpdate structure.
type VirtualizationClusterTypesBulkUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VirtualizationClusterTypesBulkUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVirtualizationClusterTypesBulkUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewVirtualizationClusterTypesBulkUpdateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVirtualizationClusterTypesBulkUpdateOK creates a VirtualizationClusterTypesBulkUpdateOK with default headers values
func NewVirtualizationClusterTypesBulkUpdateOK() *VirtualizationClusterTypesBulkUpdateOK {
	return &VirtualizationClusterTypesBulkUpdateOK{}
}

/* VirtualizationClusterTypesBulkUpdateOK describes a response with status code 200, with default header values.

VirtualizationClusterTypesBulkUpdateOK virtualization cluster types bulk update o k
*/
type VirtualizationClusterTypesBulkUpdateOK struct {
	Payload *models.ClusterType
}

func (o *VirtualizationClusterTypesBulkUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /virtualization/cluster-types/][%d] virtualizationClusterTypesBulkUpdateOK  %+v", 200, o.Payload)
}
func (o *VirtualizationClusterTypesBulkUpdateOK) GetPayload() *models.ClusterType {
	return o.Payload
}

func (o *VirtualizationClusterTypesBulkUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterType)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVirtualizationClusterTypesBulkUpdateDefault creates a VirtualizationClusterTypesBulkUpdateDefault with default headers values
func NewVirtualizationClusterTypesBulkUpdateDefault(code int) *VirtualizationClusterTypesBulkUpdateDefault {
	return &VirtualizationClusterTypesBulkUpdateDefault{
		_statusCode: code,
	}
}

/* VirtualizationClusterTypesBulkUpdateDefault describes a response with status code -1, with default header values.

VirtualizationClusterTypesBulkUpdateDefault virtualization cluster types bulk update default
*/
type VirtualizationClusterTypesBulkUpdateDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the virtualization cluster types bulk update default response
func (o *VirtualizationClusterTypesBulkUpdateDefault) Code() int {
	return o._statusCode
}

func (o *VirtualizationClusterTypesBulkUpdateDefault) Error() string {
	return fmt.Sprintf("[PUT /virtualization/cluster-types/][%d] virtualization_cluster-types_bulk_update default  %+v", o._statusCode, o.Payload)
}
func (o *VirtualizationClusterTypesBulkUpdateDefault) GetPayload() interface{} {
	return o.Payload
}

func (o *VirtualizationClusterTypesBulkUpdateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
