// Code generated by go-swagger; DO NOT EDIT.

package dcim

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fbreckle/go-netbox/netbox/models"
)

// DcimInterfacesReadReader is a Reader for the DcimInterfacesRead structure.
type DcimInterfacesReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DcimInterfacesReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDcimInterfacesReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDcimInterfacesReadDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDcimInterfacesReadOK creates a DcimInterfacesReadOK with default headers values
func NewDcimInterfacesReadOK() *DcimInterfacesReadOK {
	return &DcimInterfacesReadOK{}
}

/* DcimInterfacesReadOK describes a response with status code 200, with default header values.

DcimInterfacesReadOK dcim interfaces read o k
*/
type DcimInterfacesReadOK struct {
	Payload *models.Interface
}

func (o *DcimInterfacesReadOK) Error() string {
	return fmt.Sprintf("[GET /dcim/interfaces/{id}/][%d] dcimInterfacesReadOK  %+v", 200, o.Payload)
}
func (o *DcimInterfacesReadOK) GetPayload() *models.Interface {
	return o.Payload
}

func (o *DcimInterfacesReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Interface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDcimInterfacesReadDefault creates a DcimInterfacesReadDefault with default headers values
func NewDcimInterfacesReadDefault(code int) *DcimInterfacesReadDefault {
	return &DcimInterfacesReadDefault{
		_statusCode: code,
	}
}

/* DcimInterfacesReadDefault describes a response with status code -1, with default header values.

DcimInterfacesReadDefault dcim interfaces read default
*/
type DcimInterfacesReadDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the dcim interfaces read default response
func (o *DcimInterfacesReadDefault) Code() int {
	return o._statusCode
}

func (o *DcimInterfacesReadDefault) Error() string {
	return fmt.Sprintf("[GET /dcim/interfaces/{id}/][%d] dcim_interfaces_read default  %+v", o._statusCode, o.Payload)
}
func (o *DcimInterfacesReadDefault) GetPayload() interface{} {
	return o.Payload
}

func (o *DcimInterfacesReadDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
