// Code generated by go-swagger; DO NOT EDIT.

package extras

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ExtrasScriptsListReader is a Reader for the ExtrasScriptsList structure.
type ExtrasScriptsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExtrasScriptsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExtrasScriptsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewExtrasScriptsListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewExtrasScriptsListOK creates a ExtrasScriptsListOK with default headers values
func NewExtrasScriptsListOK() *ExtrasScriptsListOK {
	return &ExtrasScriptsListOK{}
}

/* ExtrasScriptsListOK describes a response with status code 200, with default header values.

ExtrasScriptsListOK extras scripts list o k
*/
type ExtrasScriptsListOK struct {
}

func (o *ExtrasScriptsListOK) Error() string {
	return fmt.Sprintf("[GET /extras/scripts/][%d] extrasScriptsListOK ", 200)
}

func (o *ExtrasScriptsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExtrasScriptsListDefault creates a ExtrasScriptsListDefault with default headers values
func NewExtrasScriptsListDefault(code int) *ExtrasScriptsListDefault {
	return &ExtrasScriptsListDefault{
		_statusCode: code,
	}
}

/* ExtrasScriptsListDefault describes a response with status code -1, with default header values.

ExtrasScriptsListDefault extras scripts list default
*/
type ExtrasScriptsListDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the extras scripts list default response
func (o *ExtrasScriptsListDefault) Code() int {
	return o._statusCode
}

func (o *ExtrasScriptsListDefault) Error() string {
	return fmt.Sprintf("[GET /extras/scripts/][%d] extras_scripts_list default  %+v", o._statusCode, o.Payload)
}
func (o *ExtrasScriptsListDefault) GetPayload() interface{} {
	return o.Payload
}

func (o *ExtrasScriptsListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
